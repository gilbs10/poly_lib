\ProvidesPackage{polylib}[2017/12/16 v1.0 polyominoes draw macros]
\usepackage{catchfile}
\usepackage{tikz}
\usepackage{intcalc}
\usepackage{ifthen}
\usetikzlibrary{patterns}
\usetikzlibrary{shapes.geometric}
 \makeatletter
\newcommand\loaddata[1]{\CatchFileDef\loadeddata{#1}{\endlinechar=-1}}
\def\polypath#1{\def\polyinput{#1}}
\def\printcell(#1,#2,#3,#4){
\ifx#3* % regular cell
\draw[fill={poly_cell}] (#1,#2) rectangle node[]{#4} +(1,1);
\else
\ifx#3b % Border cell
\draw[fill={poly_cell}] (#1,#2) rectangle node[]{#4} +(1,1);
\draw[ultra thin] (#1,#2) -- +(1,1) ++(1,0) -- +(-1,1);
\else
\ifx#3p % Perimeter cell
% \draw (#1+0.5,#2+0.5) circle (0.2) node[]{#4};
\draw[fill={perim_cell}] (#1,#2) rectangle node[]{#4} +(1,1);
\else
\ifx#3s % Specail cell
\draw[fill={special_cell}] (#1,#2) rectangle node[]{#4} +(1,1);
\fi
\fi
\fi
\fi
}

\def\printhexcell(#1,#2,#3,#4){
    \def\@x{#1}
    \def\@y{#2-\@x*0.5}
\ifx#3* % regular cell
\node[fill = {poly_cell}, hex] at (\@x,\@y) {};
\else
\ifx#3b % Border cell
\node[preaction={fill, {poly_cell}}, pattern=crosshatch dots, hex] at (\@x,\@y) {};
\else
\ifx#3p % Perimeter cell
\node[fill = {perim_cell}, hex] at (\@x,\@y) {};
\else
\ifx#3s % Special cell
\node[fill = {special_cell}, hex] at (\@x,\@y) {};
\fi
\fi
\fi
\fi
}

\def\printtricell(#1,#2,#3,#4){
% \ifodd\numexpr#1+#2
%     \def\@ang{90}
%     \def\@x{#1/2}
%     \def\@y{#2}
% \else
%     \def\@ang{270}
%     \def\@x{#1/2}
%     \ifthenelse{\equal{\intcalcMod{#1}{4}}{0}}{
%         \def\@y{#2+0.5}
%     }{
%         \def\@y{#2+0.5}
%     }
% \fi
\def\@y{#1/1.75}
\ifodd\numexpr#1+#2
    \def\@ang{90}
    \def\@x{-#2+0.335}
\else
    \def\@ang{270}
    \def\@x{-#2}
\fi
\ifx#3* % regular cell
\node[fill = {poly_cell}, tri,shape border rotate=\@ang] at (\@x,\@y) {};
\else
\ifx#3b % Border cell
\node[fill = {poly_cell}, tri,shape border rotate=\@ang] at (\@x,\@y) {};
\else
\ifx#3p % Perimeter cell
\node[fill = {perim_cell}, tri,shape border rotate=\@ang] at (\@x,\@y) {};
\else
\ifx#3s % Special cell
\node[fill = {special_cell}, tri,shape border rotate=\@ang] at (\@x,\@y) {};
\fi
\fi
\fi
\fi
}

\DeclareRobustCommand\drawpoly{\@ifnextchar[{\@drawpoly}{\@@drawpoly}}
\DeclareRobustCommand\drawpolyhex{\@ifnextchar[{\@drawpolyhex}{\@@drawpolyhex}}
\DeclareRobustCommand\drawpolyiamond{\@ifnextchar[{\@drawpolyiamond}{\@@drawpolyiamond}}

\def\@drawpoly[#1]#2{
\begin{tikzpicture}[x=.4cm,y=.4cm,#1]
\@definecolors{}
\@drawpolyaux{#2}
\end{tikzpicture}
}

\def\@@drawpoly#1{
\begin{tikzpicture}[x=.4cm,y=.4cm][anchor = center]
\@definecolors{}
\@drawpolyaux{#1}
\end{tikzpicture}
}

\def\@drawpolyhex[#1]#2{
\begin{tikzpicture}[x=sin(60)*0.4cm,y=0.4cm,#1]
\tikzstyle{hex}=[minimum size = 0.46188cm, draw=black,regular polygon,regular polygon sides=6,#1]
\@definecolors{}
\@drawpolyhexaux{#2}
\end{tikzpicture}
}

\def\@@drawpolyhex#1{
\begin{tikzpicture}[x=sin(60)*0.4cm,y=0.4cm][anchor = center]
\tikzstyle{hex}=[minimum size = 0.46188cm, draw=black,regular polygon,regular polygon sides=6]
\@definecolors{}
\@drawpolyhexaux{#1}
\end{tikzpicture}
}


\def\@drawpolyiamond[#1]#2{
\begin{tikzpicture}[x=0.5cm,y=0.5cm,#1][anchor = center]
\@definecolors{}
\tikzstyle{tri}=[minimum size = 0.66cm,draw=black,regular polygon,regular polygon sides=3,#1]
\@drawpolyiamondaux{#2}
\end{tikzpicture}
}

\def\@@drawpolyiamond#1{
\begin{tikzpicture}[x=0.5cm,y=0.5cm][anchor = center]
\@definecolors{}
\tikzstyle{tri}=[minimum size = 0.66cm,draw=black,regular polygon,regular polygon sides=3]
\@drawpolyiamondaux{#1}
\end{tikzpicture}
}

\def\@drawpolyaux#1{
\IfFileExists{#1}{\loaddata{#1}}{\loaddata{\polyinput#1}}
\foreach \cell in \loadeddata{
\expandafter\printcell\cell
}
}

\def\@drawpolyhexaux#1{
\IfFileExists{#1}{\loaddata{#1}}{\loaddata{\polyinput#1}}
\foreach \cell in \loadeddata{
\expandafter\printhexcell\cell
}
}


\def\@drawpolyiamondaux#1{
\IfFileExists{#1}{\loaddata{#1}}{\loaddata{\polyinput#1}}
\foreach \cell in \loadeddata{
\expandafter\printtricell\cell
}
}

\def\@definecolors{
    \definecolor{poly_cell}{RGB}{159,159,159}
    \definecolor{perim_cell}{rgb}{1,1,1}
    \definecolor{special_cell}{rgb}{0.95,0.35,0.35}
}


 \makeatother